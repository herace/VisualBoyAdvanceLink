# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/gtk/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/VisualBoyAdvance
pkglibdir = $(libdir)/VisualBoyAdvance
pkgincludedir = $(includedir)/VisualBoyAdvance
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run tar
AUTOCONF = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -I/usr/include/libpng12  
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DBKPT_SUPPORT -DPROFILING -DMMX -DDEV_VERSION
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"VisualBoyAdvance\" -DVERSION=\"1.8.0\" -DYYTEXT_POINTER=1 -DHAVE_LIBZ=1 -DHAVE_LIBPTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_MALLOC_H=1 -DHAVE_STRINGS_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ARPA_INET_H=1 -DHAVE_NETINET_IN_H=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GETTEXT_PACKAGE = 
GMSGFMT = 
GTKMM_CFLAGS = 
GTKMM_CPPFLAGS = 
GTKMM_LIBS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBPNG_CFLAGS = -I/usr/include/libpng12  
LIBPNG_LIBS = -lpng12  
LIBS = -lpthread -lz  -lpng12  
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/missing --run makeinfo
MKINSTALLDIRS = 
MSGFMT = 
MSGMERGE = 
NASM = /usr/bin/nasm
OBJEXT = o
PACKAGE = VisualBoyAdvance
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = 
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib/i386-linux-gnu -lSDL
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = 
VBA_EXTRA = 
VBA_LIBS = ../gb/libgb.a ../prof/libprof.a ../i386/lib386.a
VBA_SRC_EXTRA =  prof i386 sdl
VERSION = 1.8.0
XGETTEXT = 
YACC = bison -y
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/jaime/eclipse-workspace/VisualBoyAdvance_Link_PROG/VisualBoyAdvance-1.8.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /opt/visualboyadvancelink/
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
SUBDIRS = images

bin_PROGRAMS = gvba

noinst_LIBRARIES = libgba.a

gvba_SOURCES = \
	configfile.cpp		\
	configfile.h		\
	filters.cpp		\
	filters.h		\
	input.cpp		\
	input.h			\
	intl.h			\
	joypadconfig.cpp	\
	joypadconfig.h		\
	main.cpp		\
	menuitem.h		\
	screenarea.cpp		\
	screenarea.h		\
	sigccompat.h		\
	system.cpp		\
	tools.cpp		\
	tools.h			\
	windowcallbacks.cpp	\
	window.cpp		\
	window.h


gvba_LDADD = libgba.a ../gb/libgb.a ../prof/libprof.a ../i386/lib386.a   -L/usr/lib/i386-linux-gnu -lSDL

gvba_DEPENDENCIES = libgba.a ../gb/libgb.a ../prof/libprof.a ../i386/lib386.a

gvba_CPPFLAGS = \
	-DPKGDATADIR=\"$(pkgdatadir)\"			\
	-DLOCALEDIR=\"$(datadir)/locale\"		\
	-DGETTEXT_PACKAGE=\"$(GETTEXT_PACKAGE)\"	\
	$(GTKMM_CPPFLAGS)


gvba_CXXFLAGS =  -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT

libgba_a_SOURCES = \
	../2xSaI.cpp		\
	../AutoBuild.h		\
	../Cheats.cpp		\
	../Cheats.h		\
	../EEprom.cpp		\
	../EEprom.h		\
	../Flash.cpp		\
	../Flash.h		\
	../GBA.cpp		\
	../GBA.h		\
	../GBAinline.h		\
	../Gfx.cpp		\
	../Gfx.h		\
	../Globals.cpp		\
	../Globals.h		\
	../Mode0.cpp		\
	../Mode1.cpp		\
	../Mode2.cpp		\
	../Mode3.cpp		\
	../Mode4.cpp		\
	../Mode5.cpp		\
	../NLS.h		\
	../Port.h		\
	../RTC.cpp		\
	../RTC.h		\
	../Sound.cpp		\
	../Sound.h		\
	../Sram.cpp		\
	../Sram.h		\
	../System.h		\
	../Text.cpp		\
	../Text.h		\
	../Util.cpp		\
	../Util.h		\
	../admame.cpp		\
	../agbprint.cpp		\
	../agbprint.h		\
	../arm-new.h		\
	../armdis.cpp		\
	../armdis.h		\
	../bilinear.cpp		\
	../bios.cpp		\
	../bios.h		\
	../elf.cpp		\
	../elf.h		\
	../getopt.c		\
	../getopt.h		\
	../getopt1.c		\
	../hq2x.cpp		\
	../hq2x.h		\
	../interframe.cpp	\
	../interp.h		\
	../lq2x.h		\
	../memgzio.c		\
	../memgzio.h		\
	../motionblur.cpp	\
	../pixel.cpp		\
	../remote.cpp		\
	../scanline.cpp		\
	../simple2x.cpp		\
	../thumb.h		\
	../unzip.cpp		\
	../unzip.h


libgba_a_CPPFLAGS = -DSDL

libgba_a_CXXFLAGS = -fno-exceptions

dist_pkgdata_DATA = vba.glade
subdir = src/gtk
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libgba_a_AR = $(AR) cru
libgba_a_LIBADD =
am_libgba_a_OBJECTS = libgba_a-2xSaI.$(OBJEXT) libgba_a-Cheats.$(OBJEXT) \
	libgba_a-EEprom.$(OBJEXT) libgba_a-Flash.$(OBJEXT) \
	libgba_a-GBA.$(OBJEXT) libgba_a-Gfx.$(OBJEXT) \
	libgba_a-Globals.$(OBJEXT) libgba_a-Mode0.$(OBJEXT) \
	libgba_a-Mode1.$(OBJEXT) libgba_a-Mode2.$(OBJEXT) \
	libgba_a-Mode3.$(OBJEXT) libgba_a-Mode4.$(OBJEXT) \
	libgba_a-Mode5.$(OBJEXT) libgba_a-RTC.$(OBJEXT) \
	libgba_a-Sound.$(OBJEXT) libgba_a-Sram.$(OBJEXT) \
	libgba_a-Text.$(OBJEXT) libgba_a-Util.$(OBJEXT) \
	libgba_a-admame.$(OBJEXT) libgba_a-agbprint.$(OBJEXT) \
	libgba_a-armdis.$(OBJEXT) libgba_a-bilinear.$(OBJEXT) \
	libgba_a-bios.$(OBJEXT) libgba_a-elf.$(OBJEXT) \
	libgba_a-getopt.$(OBJEXT) libgba_a-getopt1.$(OBJEXT) \
	libgba_a-hq2x.$(OBJEXT) libgba_a-interframe.$(OBJEXT) \
	libgba_a-memgzio.$(OBJEXT) libgba_a-motionblur.$(OBJEXT) \
	libgba_a-pixel.$(OBJEXT) libgba_a-remote.$(OBJEXT) \
	libgba_a-scanline.$(OBJEXT) libgba_a-simple2x.$(OBJEXT) \
	libgba_a-unzip.$(OBJEXT)
libgba_a_OBJECTS = $(am_libgba_a_OBJECTS)
bin_PROGRAMS = gvba$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_gvba_OBJECTS = gvba-configfile.$(OBJEXT) gvba-filters.$(OBJEXT) \
	gvba-input.$(OBJEXT) gvba-joypadconfig.$(OBJEXT) \
	gvba-main.$(OBJEXT) gvba-screenarea.$(OBJEXT) \
	gvba-system.$(OBJEXT) gvba-tools.$(OBJEXT) \
	gvba-windowcallbacks.$(OBJEXT) gvba-window.$(OBJEXT)
gvba_OBJECTS = $(am_gvba_OBJECTS)
gvba_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/gvba-configfile.Po \
	./$(DEPDIR)/gvba-filters.Po \
	./$(DEPDIR)/gvba-input.Po \
	./$(DEPDIR)/gvba-joypadconfig.Po \
	./$(DEPDIR)/gvba-main.Po \
	./$(DEPDIR)/gvba-screenarea.Po \
	./$(DEPDIR)/gvba-system.Po \
	./$(DEPDIR)/gvba-tools.Po \
	./$(DEPDIR)/gvba-window.Po \
	./$(DEPDIR)/gvba-windowcallbacks.Po \
	./$(DEPDIR)/libgba_a-2xSaI.Po \
	./$(DEPDIR)/libgba_a-Cheats.Po \
	./$(DEPDIR)/libgba_a-EEprom.Po \
	./$(DEPDIR)/libgba_a-Flash.Po \
	./$(DEPDIR)/libgba_a-GBA.Po \
	./$(DEPDIR)/libgba_a-Gfx.Po \
	./$(DEPDIR)/libgba_a-Globals.Po \
	./$(DEPDIR)/libgba_a-Mode0.Po \
	./$(DEPDIR)/libgba_a-Mode1.Po \
	./$(DEPDIR)/libgba_a-Mode2.Po \
	./$(DEPDIR)/libgba_a-Mode3.Po \
	./$(DEPDIR)/libgba_a-Mode4.Po \
	./$(DEPDIR)/libgba_a-Mode5.Po \
	./$(DEPDIR)/libgba_a-RTC.Po \
	./$(DEPDIR)/libgba_a-Sound.Po \
	./$(DEPDIR)/libgba_a-Sram.Po \
	./$(DEPDIR)/libgba_a-Text.Po \
	./$(DEPDIR)/libgba_a-Util.Po \
	./$(DEPDIR)/libgba_a-admame.Po \
	./$(DEPDIR)/libgba_a-agbprint.Po \
	./$(DEPDIR)/libgba_a-armdis.Po \
	./$(DEPDIR)/libgba_a-bilinear.Po \
	./$(DEPDIR)/libgba_a-bios.Po \
	./$(DEPDIR)/libgba_a-elf.Po \
	./$(DEPDIR)/libgba_a-getopt.Po \
	./$(DEPDIR)/libgba_a-getopt1.Po \
	./$(DEPDIR)/libgba_a-hq2x.Po \
	./$(DEPDIR)/libgba_a-interframe.Po \
	./$(DEPDIR)/libgba_a-memgzio.Po \
	./$(DEPDIR)/libgba_a-motionblur.Po \
	./$(DEPDIR)/libgba_a-pixel.Po \
	./$(DEPDIR)/libgba_a-remote.Po \
	./$(DEPDIR)/libgba_a-scanline.Po \
	./$(DEPDIR)/libgba_a-simple2x.Po \
	./$(DEPDIR)/libgba_a-unzip.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(libgba_a_SOURCES) $(gvba_SOURCES)
DATA = $(dist_pkgdata_DATA)


RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(dist_pkgdata_DATA) $(srcdir)/Makefile.in Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libgba_a_SOURCES) $(gvba_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gtk/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libgba.a: $(libgba_a_OBJECTS) $(libgba_a_DEPENDENCIES) 
	-rm -f libgba.a
	$(libgba_a_AR) libgba.a $(libgba_a_OBJECTS) $(libgba_a_LIBADD)
	$(RANLIB) libgba.a
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
gvba$(EXEEXT): $(gvba_OBJECTS) $(gvba_DEPENDENCIES) 
	@rm -f gvba$(EXEEXT)
	$(CXXLINK) $(gvba_LDFLAGS) $(gvba_OBJECTS) $(gvba_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gvba-configfile.Po
include ./$(DEPDIR)/gvba-filters.Po
include ./$(DEPDIR)/gvba-input.Po
include ./$(DEPDIR)/gvba-joypadconfig.Po
include ./$(DEPDIR)/gvba-main.Po
include ./$(DEPDIR)/gvba-screenarea.Po
include ./$(DEPDIR)/gvba-system.Po
include ./$(DEPDIR)/gvba-tools.Po
include ./$(DEPDIR)/gvba-window.Po
include ./$(DEPDIR)/gvba-windowcallbacks.Po
include ./$(DEPDIR)/libgba_a-2xSaI.Po
include ./$(DEPDIR)/libgba_a-Cheats.Po
include ./$(DEPDIR)/libgba_a-EEprom.Po
include ./$(DEPDIR)/libgba_a-Flash.Po
include ./$(DEPDIR)/libgba_a-GBA.Po
include ./$(DEPDIR)/libgba_a-Gfx.Po
include ./$(DEPDIR)/libgba_a-Globals.Po
include ./$(DEPDIR)/libgba_a-Mode0.Po
include ./$(DEPDIR)/libgba_a-Mode1.Po
include ./$(DEPDIR)/libgba_a-Mode2.Po
include ./$(DEPDIR)/libgba_a-Mode3.Po
include ./$(DEPDIR)/libgba_a-Mode4.Po
include ./$(DEPDIR)/libgba_a-Mode5.Po
include ./$(DEPDIR)/libgba_a-RTC.Po
include ./$(DEPDIR)/libgba_a-Sound.Po
include ./$(DEPDIR)/libgba_a-Sram.Po
include ./$(DEPDIR)/libgba_a-Text.Po
include ./$(DEPDIR)/libgba_a-Util.Po
include ./$(DEPDIR)/libgba_a-admame.Po
include ./$(DEPDIR)/libgba_a-agbprint.Po
include ./$(DEPDIR)/libgba_a-armdis.Po
include ./$(DEPDIR)/libgba_a-bilinear.Po
include ./$(DEPDIR)/libgba_a-bios.Po
include ./$(DEPDIR)/libgba_a-elf.Po
include ./$(DEPDIR)/libgba_a-getopt.Po
include ./$(DEPDIR)/libgba_a-getopt1.Po
include ./$(DEPDIR)/libgba_a-hq2x.Po
include ./$(DEPDIR)/libgba_a-interframe.Po
include ./$(DEPDIR)/libgba_a-memgzio.Po
include ./$(DEPDIR)/libgba_a-motionblur.Po
include ./$(DEPDIR)/libgba_a-pixel.Po
include ./$(DEPDIR)/libgba_a-remote.Po
include ./$(DEPDIR)/libgba_a-scanline.Po
include ./$(DEPDIR)/libgba_a-simple2x.Po
include ./$(DEPDIR)/libgba_a-unzip.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libgba_a-getopt.o: ../getopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt.o -MD -MP -MF "$(DEPDIR)/libgba_a-getopt.Tpo" \
	  -c -o libgba_a-getopt.o `test -f '../getopt.c' || echo '$(srcdir)/'`../getopt.c; \
	then mv -f "$(DEPDIR)/libgba_a-getopt.Tpo" "$(DEPDIR)/libgba_a-getopt.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-getopt.Tpo"; exit 1; \
	fi
#	source='../getopt.c' object='libgba_a-getopt.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-getopt.Po' tmpdepfile='$(DEPDIR)/libgba_a-getopt.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt.o `test -f '../getopt.c' || echo '$(srcdir)/'`../getopt.c

libgba_a-getopt.obj: ../getopt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt.obj -MD -MP -MF "$(DEPDIR)/libgba_a-getopt.Tpo" \
	  -c -o libgba_a-getopt.obj `if test -f '../getopt.c'; then $(CYGPATH_W) '../getopt.c'; else $(CYGPATH_W) '$(srcdir)/../getopt.c'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-getopt.Tpo" "$(DEPDIR)/libgba_a-getopt.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-getopt.Tpo"; exit 1; \
	fi
#	source='../getopt.c' object='libgba_a-getopt.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-getopt.Po' tmpdepfile='$(DEPDIR)/libgba_a-getopt.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt.obj `if test -f '../getopt.c'; then $(CYGPATH_W) '../getopt.c'; else $(CYGPATH_W) '$(srcdir)/../getopt.c'; fi`

libgba_a-getopt1.o: ../getopt1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt1.o -MD -MP -MF "$(DEPDIR)/libgba_a-getopt1.Tpo" \
	  -c -o libgba_a-getopt1.o `test -f '../getopt1.c' || echo '$(srcdir)/'`../getopt1.c; \
	then mv -f "$(DEPDIR)/libgba_a-getopt1.Tpo" "$(DEPDIR)/libgba_a-getopt1.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-getopt1.Tpo"; exit 1; \
	fi
#	source='../getopt1.c' object='libgba_a-getopt1.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-getopt1.Po' tmpdepfile='$(DEPDIR)/libgba_a-getopt1.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt1.o `test -f '../getopt1.c' || echo '$(srcdir)/'`../getopt1.c

libgba_a-getopt1.obj: ../getopt1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt1.obj -MD -MP -MF "$(DEPDIR)/libgba_a-getopt1.Tpo" \
	  -c -o libgba_a-getopt1.obj `if test -f '../getopt1.c'; then $(CYGPATH_W) '../getopt1.c'; else $(CYGPATH_W) '$(srcdir)/../getopt1.c'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-getopt1.Tpo" "$(DEPDIR)/libgba_a-getopt1.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-getopt1.Tpo"; exit 1; \
	fi
#	source='../getopt1.c' object='libgba_a-getopt1.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-getopt1.Po' tmpdepfile='$(DEPDIR)/libgba_a-getopt1.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt1.obj `if test -f '../getopt1.c'; then $(CYGPATH_W) '../getopt1.c'; else $(CYGPATH_W) '$(srcdir)/../getopt1.c'; fi`

libgba_a-memgzio.o: ../memgzio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-memgzio.o -MD -MP -MF "$(DEPDIR)/libgba_a-memgzio.Tpo" \
	  -c -o libgba_a-memgzio.o `test -f '../memgzio.c' || echo '$(srcdir)/'`../memgzio.c; \
	then mv -f "$(DEPDIR)/libgba_a-memgzio.Tpo" "$(DEPDIR)/libgba_a-memgzio.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-memgzio.Tpo"; exit 1; \
	fi
#	source='../memgzio.c' object='libgba_a-memgzio.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-memgzio.Po' tmpdepfile='$(DEPDIR)/libgba_a-memgzio.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-memgzio.o `test -f '../memgzio.c' || echo '$(srcdir)/'`../memgzio.c

libgba_a-memgzio.obj: ../memgzio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-memgzio.obj -MD -MP -MF "$(DEPDIR)/libgba_a-memgzio.Tpo" \
	  -c -o libgba_a-memgzio.obj `if test -f '../memgzio.c'; then $(CYGPATH_W) '../memgzio.c'; else $(CYGPATH_W) '$(srcdir)/../memgzio.c'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-memgzio.Tpo" "$(DEPDIR)/libgba_a-memgzio.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-memgzio.Tpo"; exit 1; \
	fi
#	source='../memgzio.c' object='libgba_a-memgzio.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-memgzio.Po' tmpdepfile='$(DEPDIR)/libgba_a-memgzio.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-memgzio.obj `if test -f '../memgzio.c'; then $(CYGPATH_W) '../memgzio.c'; else $(CYGPATH_W) '$(srcdir)/../memgzio.c'; fi`

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

libgba_a-2xSaI.o: ../2xSaI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-2xSaI.o -MD -MP -MF "$(DEPDIR)/libgba_a-2xSaI.Tpo" \
	  -c -o libgba_a-2xSaI.o `test -f '../2xSaI.cpp' || echo '$(srcdir)/'`../2xSaI.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-2xSaI.Tpo" "$(DEPDIR)/libgba_a-2xSaI.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-2xSaI.Tpo"; exit 1; \
	fi
#	source='../2xSaI.cpp' object='libgba_a-2xSaI.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-2xSaI.Po' tmpdepfile='$(DEPDIR)/libgba_a-2xSaI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-2xSaI.o `test -f '../2xSaI.cpp' || echo '$(srcdir)/'`../2xSaI.cpp

libgba_a-2xSaI.obj: ../2xSaI.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-2xSaI.obj -MD -MP -MF "$(DEPDIR)/libgba_a-2xSaI.Tpo" \
	  -c -o libgba_a-2xSaI.obj `if test -f '../2xSaI.cpp'; then $(CYGPATH_W) '../2xSaI.cpp'; else $(CYGPATH_W) '$(srcdir)/../2xSaI.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-2xSaI.Tpo" "$(DEPDIR)/libgba_a-2xSaI.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-2xSaI.Tpo"; exit 1; \
	fi
#	source='../2xSaI.cpp' object='libgba_a-2xSaI.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-2xSaI.Po' tmpdepfile='$(DEPDIR)/libgba_a-2xSaI.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-2xSaI.obj `if test -f '../2xSaI.cpp'; then $(CYGPATH_W) '../2xSaI.cpp'; else $(CYGPATH_W) '$(srcdir)/../2xSaI.cpp'; fi`

libgba_a-Cheats.o: ../Cheats.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Cheats.o -MD -MP -MF "$(DEPDIR)/libgba_a-Cheats.Tpo" \
	  -c -o libgba_a-Cheats.o `test -f '../Cheats.cpp' || echo '$(srcdir)/'`../Cheats.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Cheats.Tpo" "$(DEPDIR)/libgba_a-Cheats.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Cheats.Tpo"; exit 1; \
	fi
#	source='../Cheats.cpp' object='libgba_a-Cheats.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Cheats.Po' tmpdepfile='$(DEPDIR)/libgba_a-Cheats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Cheats.o `test -f '../Cheats.cpp' || echo '$(srcdir)/'`../Cheats.cpp

libgba_a-Cheats.obj: ../Cheats.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Cheats.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Cheats.Tpo" \
	  -c -o libgba_a-Cheats.obj `if test -f '../Cheats.cpp'; then $(CYGPATH_W) '../Cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../Cheats.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Cheats.Tpo" "$(DEPDIR)/libgba_a-Cheats.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Cheats.Tpo"; exit 1; \
	fi
#	source='../Cheats.cpp' object='libgba_a-Cheats.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Cheats.Po' tmpdepfile='$(DEPDIR)/libgba_a-Cheats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Cheats.obj `if test -f '../Cheats.cpp'; then $(CYGPATH_W) '../Cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../Cheats.cpp'; fi`

libgba_a-EEprom.o: ../EEprom.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-EEprom.o -MD -MP -MF "$(DEPDIR)/libgba_a-EEprom.Tpo" \
	  -c -o libgba_a-EEprom.o `test -f '../EEprom.cpp' || echo '$(srcdir)/'`../EEprom.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-EEprom.Tpo" "$(DEPDIR)/libgba_a-EEprom.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-EEprom.Tpo"; exit 1; \
	fi
#	source='../EEprom.cpp' object='libgba_a-EEprom.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-EEprom.Po' tmpdepfile='$(DEPDIR)/libgba_a-EEprom.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-EEprom.o `test -f '../EEprom.cpp' || echo '$(srcdir)/'`../EEprom.cpp

libgba_a-EEprom.obj: ../EEprom.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-EEprom.obj -MD -MP -MF "$(DEPDIR)/libgba_a-EEprom.Tpo" \
	  -c -o libgba_a-EEprom.obj `if test -f '../EEprom.cpp'; then $(CYGPATH_W) '../EEprom.cpp'; else $(CYGPATH_W) '$(srcdir)/../EEprom.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-EEprom.Tpo" "$(DEPDIR)/libgba_a-EEprom.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-EEprom.Tpo"; exit 1; \
	fi
#	source='../EEprom.cpp' object='libgba_a-EEprom.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-EEprom.Po' tmpdepfile='$(DEPDIR)/libgba_a-EEprom.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-EEprom.obj `if test -f '../EEprom.cpp'; then $(CYGPATH_W) '../EEprom.cpp'; else $(CYGPATH_W) '$(srcdir)/../EEprom.cpp'; fi`

libgba_a-Flash.o: ../Flash.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Flash.o -MD -MP -MF "$(DEPDIR)/libgba_a-Flash.Tpo" \
	  -c -o libgba_a-Flash.o `test -f '../Flash.cpp' || echo '$(srcdir)/'`../Flash.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Flash.Tpo" "$(DEPDIR)/libgba_a-Flash.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Flash.Tpo"; exit 1; \
	fi
#	source='../Flash.cpp' object='libgba_a-Flash.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Flash.Po' tmpdepfile='$(DEPDIR)/libgba_a-Flash.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Flash.o `test -f '../Flash.cpp' || echo '$(srcdir)/'`../Flash.cpp

libgba_a-Flash.obj: ../Flash.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Flash.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Flash.Tpo" \
	  -c -o libgba_a-Flash.obj `if test -f '../Flash.cpp'; then $(CYGPATH_W) '../Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/../Flash.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Flash.Tpo" "$(DEPDIR)/libgba_a-Flash.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Flash.Tpo"; exit 1; \
	fi
#	source='../Flash.cpp' object='libgba_a-Flash.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Flash.Po' tmpdepfile='$(DEPDIR)/libgba_a-Flash.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Flash.obj `if test -f '../Flash.cpp'; then $(CYGPATH_W) '../Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/../Flash.cpp'; fi`

libgba_a-GBA.o: ../GBA.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-GBA.o -MD -MP -MF "$(DEPDIR)/libgba_a-GBA.Tpo" \
	  -c -o libgba_a-GBA.o `test -f '../GBA.cpp' || echo '$(srcdir)/'`../GBA.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-GBA.Tpo" "$(DEPDIR)/libgba_a-GBA.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-GBA.Tpo"; exit 1; \
	fi
#	source='../GBA.cpp' object='libgba_a-GBA.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-GBA.Po' tmpdepfile='$(DEPDIR)/libgba_a-GBA.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-GBA.o `test -f '../GBA.cpp' || echo '$(srcdir)/'`../GBA.cpp

libgba_a-GBA.obj: ../GBA.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-GBA.obj -MD -MP -MF "$(DEPDIR)/libgba_a-GBA.Tpo" \
	  -c -o libgba_a-GBA.obj `if test -f '../GBA.cpp'; then $(CYGPATH_W) '../GBA.cpp'; else $(CYGPATH_W) '$(srcdir)/../GBA.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-GBA.Tpo" "$(DEPDIR)/libgba_a-GBA.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-GBA.Tpo"; exit 1; \
	fi
#	source='../GBA.cpp' object='libgba_a-GBA.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-GBA.Po' tmpdepfile='$(DEPDIR)/libgba_a-GBA.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-GBA.obj `if test -f '../GBA.cpp'; then $(CYGPATH_W) '../GBA.cpp'; else $(CYGPATH_W) '$(srcdir)/../GBA.cpp'; fi`

libgba_a-Gfx.o: ../Gfx.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Gfx.o -MD -MP -MF "$(DEPDIR)/libgba_a-Gfx.Tpo" \
	  -c -o libgba_a-Gfx.o `test -f '../Gfx.cpp' || echo '$(srcdir)/'`../Gfx.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Gfx.Tpo" "$(DEPDIR)/libgba_a-Gfx.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Gfx.Tpo"; exit 1; \
	fi
#	source='../Gfx.cpp' object='libgba_a-Gfx.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Gfx.Po' tmpdepfile='$(DEPDIR)/libgba_a-Gfx.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Gfx.o `test -f '../Gfx.cpp' || echo '$(srcdir)/'`../Gfx.cpp

libgba_a-Gfx.obj: ../Gfx.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Gfx.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Gfx.Tpo" \
	  -c -o libgba_a-Gfx.obj `if test -f '../Gfx.cpp'; then $(CYGPATH_W) '../Gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../Gfx.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Gfx.Tpo" "$(DEPDIR)/libgba_a-Gfx.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Gfx.Tpo"; exit 1; \
	fi
#	source='../Gfx.cpp' object='libgba_a-Gfx.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Gfx.Po' tmpdepfile='$(DEPDIR)/libgba_a-Gfx.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Gfx.obj `if test -f '../Gfx.cpp'; then $(CYGPATH_W) '../Gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../Gfx.cpp'; fi`

libgba_a-Globals.o: ../Globals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Globals.o -MD -MP -MF "$(DEPDIR)/libgba_a-Globals.Tpo" \
	  -c -o libgba_a-Globals.o `test -f '../Globals.cpp' || echo '$(srcdir)/'`../Globals.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Globals.Tpo" "$(DEPDIR)/libgba_a-Globals.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Globals.Tpo"; exit 1; \
	fi
#	source='../Globals.cpp' object='libgba_a-Globals.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Globals.Po' tmpdepfile='$(DEPDIR)/libgba_a-Globals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Globals.o `test -f '../Globals.cpp' || echo '$(srcdir)/'`../Globals.cpp

libgba_a-Globals.obj: ../Globals.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Globals.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Globals.Tpo" \
	  -c -o libgba_a-Globals.obj `if test -f '../Globals.cpp'; then $(CYGPATH_W) '../Globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../Globals.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Globals.Tpo" "$(DEPDIR)/libgba_a-Globals.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Globals.Tpo"; exit 1; \
	fi
#	source='../Globals.cpp' object='libgba_a-Globals.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Globals.Po' tmpdepfile='$(DEPDIR)/libgba_a-Globals.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Globals.obj `if test -f '../Globals.cpp'; then $(CYGPATH_W) '../Globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../Globals.cpp'; fi`

libgba_a-Mode0.o: ../Mode0.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode0.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode0.Tpo" \
	  -c -o libgba_a-Mode0.o `test -f '../Mode0.cpp' || echo '$(srcdir)/'`../Mode0.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode0.Tpo" "$(DEPDIR)/libgba_a-Mode0.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode0.Tpo"; exit 1; \
	fi
#	source='../Mode0.cpp' object='libgba_a-Mode0.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode0.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode0.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode0.o `test -f '../Mode0.cpp' || echo '$(srcdir)/'`../Mode0.cpp

libgba_a-Mode0.obj: ../Mode0.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode0.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode0.Tpo" \
	  -c -o libgba_a-Mode0.obj `if test -f '../Mode0.cpp'; then $(CYGPATH_W) '../Mode0.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode0.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode0.Tpo" "$(DEPDIR)/libgba_a-Mode0.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode0.Tpo"; exit 1; \
	fi
#	source='../Mode0.cpp' object='libgba_a-Mode0.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode0.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode0.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode0.obj `if test -f '../Mode0.cpp'; then $(CYGPATH_W) '../Mode0.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode0.cpp'; fi`

libgba_a-Mode1.o: ../Mode1.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode1.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode1.Tpo" \
	  -c -o libgba_a-Mode1.o `test -f '../Mode1.cpp' || echo '$(srcdir)/'`../Mode1.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode1.Tpo" "$(DEPDIR)/libgba_a-Mode1.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode1.Tpo"; exit 1; \
	fi
#	source='../Mode1.cpp' object='libgba_a-Mode1.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode1.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode1.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode1.o `test -f '../Mode1.cpp' || echo '$(srcdir)/'`../Mode1.cpp

libgba_a-Mode1.obj: ../Mode1.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode1.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode1.Tpo" \
	  -c -o libgba_a-Mode1.obj `if test -f '../Mode1.cpp'; then $(CYGPATH_W) '../Mode1.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode1.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode1.Tpo" "$(DEPDIR)/libgba_a-Mode1.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode1.Tpo"; exit 1; \
	fi
#	source='../Mode1.cpp' object='libgba_a-Mode1.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode1.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode1.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode1.obj `if test -f '../Mode1.cpp'; then $(CYGPATH_W) '../Mode1.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode1.cpp'; fi`

libgba_a-Mode2.o: ../Mode2.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode2.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode2.Tpo" \
	  -c -o libgba_a-Mode2.o `test -f '../Mode2.cpp' || echo '$(srcdir)/'`../Mode2.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode2.Tpo" "$(DEPDIR)/libgba_a-Mode2.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode2.Tpo"; exit 1; \
	fi
#	source='../Mode2.cpp' object='libgba_a-Mode2.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode2.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode2.o `test -f '../Mode2.cpp' || echo '$(srcdir)/'`../Mode2.cpp

libgba_a-Mode2.obj: ../Mode2.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode2.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode2.Tpo" \
	  -c -o libgba_a-Mode2.obj `if test -f '../Mode2.cpp'; then $(CYGPATH_W) '../Mode2.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode2.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode2.Tpo" "$(DEPDIR)/libgba_a-Mode2.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode2.Tpo"; exit 1; \
	fi
#	source='../Mode2.cpp' object='libgba_a-Mode2.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode2.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode2.obj `if test -f '../Mode2.cpp'; then $(CYGPATH_W) '../Mode2.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode2.cpp'; fi`

libgba_a-Mode3.o: ../Mode3.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode3.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode3.Tpo" \
	  -c -o libgba_a-Mode3.o `test -f '../Mode3.cpp' || echo '$(srcdir)/'`../Mode3.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode3.Tpo" "$(DEPDIR)/libgba_a-Mode3.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode3.Tpo"; exit 1; \
	fi
#	source='../Mode3.cpp' object='libgba_a-Mode3.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode3.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode3.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode3.o `test -f '../Mode3.cpp' || echo '$(srcdir)/'`../Mode3.cpp

libgba_a-Mode3.obj: ../Mode3.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode3.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode3.Tpo" \
	  -c -o libgba_a-Mode3.obj `if test -f '../Mode3.cpp'; then $(CYGPATH_W) '../Mode3.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode3.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode3.Tpo" "$(DEPDIR)/libgba_a-Mode3.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode3.Tpo"; exit 1; \
	fi
#	source='../Mode3.cpp' object='libgba_a-Mode3.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode3.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode3.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode3.obj `if test -f '../Mode3.cpp'; then $(CYGPATH_W) '../Mode3.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode3.cpp'; fi`

libgba_a-Mode4.o: ../Mode4.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode4.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode4.Tpo" \
	  -c -o libgba_a-Mode4.o `test -f '../Mode4.cpp' || echo '$(srcdir)/'`../Mode4.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode4.Tpo" "$(DEPDIR)/libgba_a-Mode4.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode4.Tpo"; exit 1; \
	fi
#	source='../Mode4.cpp' object='libgba_a-Mode4.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode4.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode4.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode4.o `test -f '../Mode4.cpp' || echo '$(srcdir)/'`../Mode4.cpp

libgba_a-Mode4.obj: ../Mode4.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode4.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode4.Tpo" \
	  -c -o libgba_a-Mode4.obj `if test -f '../Mode4.cpp'; then $(CYGPATH_W) '../Mode4.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode4.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode4.Tpo" "$(DEPDIR)/libgba_a-Mode4.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode4.Tpo"; exit 1; \
	fi
#	source='../Mode4.cpp' object='libgba_a-Mode4.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode4.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode4.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode4.obj `if test -f '../Mode4.cpp'; then $(CYGPATH_W) '../Mode4.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode4.cpp'; fi`

libgba_a-Mode5.o: ../Mode5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode5.o -MD -MP -MF "$(DEPDIR)/libgba_a-Mode5.Tpo" \
	  -c -o libgba_a-Mode5.o `test -f '../Mode5.cpp' || echo '$(srcdir)/'`../Mode5.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Mode5.Tpo" "$(DEPDIR)/libgba_a-Mode5.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode5.Tpo"; exit 1; \
	fi
#	source='../Mode5.cpp' object='libgba_a-Mode5.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode5.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode5.o `test -f '../Mode5.cpp' || echo '$(srcdir)/'`../Mode5.cpp

libgba_a-Mode5.obj: ../Mode5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode5.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Mode5.Tpo" \
	  -c -o libgba_a-Mode5.obj `if test -f '../Mode5.cpp'; then $(CYGPATH_W) '../Mode5.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode5.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Mode5.Tpo" "$(DEPDIR)/libgba_a-Mode5.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Mode5.Tpo"; exit 1; \
	fi
#	source='../Mode5.cpp' object='libgba_a-Mode5.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Mode5.Po' tmpdepfile='$(DEPDIR)/libgba_a-Mode5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode5.obj `if test -f '../Mode5.cpp'; then $(CYGPATH_W) '../Mode5.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode5.cpp'; fi`

libgba_a-RTC.o: ../RTC.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-RTC.o -MD -MP -MF "$(DEPDIR)/libgba_a-RTC.Tpo" \
	  -c -o libgba_a-RTC.o `test -f '../RTC.cpp' || echo '$(srcdir)/'`../RTC.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-RTC.Tpo" "$(DEPDIR)/libgba_a-RTC.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-RTC.Tpo"; exit 1; \
	fi
#	source='../RTC.cpp' object='libgba_a-RTC.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-RTC.Po' tmpdepfile='$(DEPDIR)/libgba_a-RTC.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-RTC.o `test -f '../RTC.cpp' || echo '$(srcdir)/'`../RTC.cpp

libgba_a-RTC.obj: ../RTC.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-RTC.obj -MD -MP -MF "$(DEPDIR)/libgba_a-RTC.Tpo" \
	  -c -o libgba_a-RTC.obj `if test -f '../RTC.cpp'; then $(CYGPATH_W) '../RTC.cpp'; else $(CYGPATH_W) '$(srcdir)/../RTC.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-RTC.Tpo" "$(DEPDIR)/libgba_a-RTC.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-RTC.Tpo"; exit 1; \
	fi
#	source='../RTC.cpp' object='libgba_a-RTC.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-RTC.Po' tmpdepfile='$(DEPDIR)/libgba_a-RTC.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-RTC.obj `if test -f '../RTC.cpp'; then $(CYGPATH_W) '../RTC.cpp'; else $(CYGPATH_W) '$(srcdir)/../RTC.cpp'; fi`

libgba_a-Sound.o: ../Sound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sound.o -MD -MP -MF "$(DEPDIR)/libgba_a-Sound.Tpo" \
	  -c -o libgba_a-Sound.o `test -f '../Sound.cpp' || echo '$(srcdir)/'`../Sound.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Sound.Tpo" "$(DEPDIR)/libgba_a-Sound.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Sound.Tpo"; exit 1; \
	fi
#	source='../Sound.cpp' object='libgba_a-Sound.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Sound.Po' tmpdepfile='$(DEPDIR)/libgba_a-Sound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sound.o `test -f '../Sound.cpp' || echo '$(srcdir)/'`../Sound.cpp

libgba_a-Sound.obj: ../Sound.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sound.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Sound.Tpo" \
	  -c -o libgba_a-Sound.obj `if test -f '../Sound.cpp'; then $(CYGPATH_W) '../Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sound.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Sound.Tpo" "$(DEPDIR)/libgba_a-Sound.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Sound.Tpo"; exit 1; \
	fi
#	source='../Sound.cpp' object='libgba_a-Sound.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Sound.Po' tmpdepfile='$(DEPDIR)/libgba_a-Sound.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sound.obj `if test -f '../Sound.cpp'; then $(CYGPATH_W) '../Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sound.cpp'; fi`

libgba_a-Sram.o: ../Sram.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sram.o -MD -MP -MF "$(DEPDIR)/libgba_a-Sram.Tpo" \
	  -c -o libgba_a-Sram.o `test -f '../Sram.cpp' || echo '$(srcdir)/'`../Sram.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Sram.Tpo" "$(DEPDIR)/libgba_a-Sram.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Sram.Tpo"; exit 1; \
	fi
#	source='../Sram.cpp' object='libgba_a-Sram.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Sram.Po' tmpdepfile='$(DEPDIR)/libgba_a-Sram.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sram.o `test -f '../Sram.cpp' || echo '$(srcdir)/'`../Sram.cpp

libgba_a-Sram.obj: ../Sram.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sram.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Sram.Tpo" \
	  -c -o libgba_a-Sram.obj `if test -f '../Sram.cpp'; then $(CYGPATH_W) '../Sram.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sram.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Sram.Tpo" "$(DEPDIR)/libgba_a-Sram.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Sram.Tpo"; exit 1; \
	fi
#	source='../Sram.cpp' object='libgba_a-Sram.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Sram.Po' tmpdepfile='$(DEPDIR)/libgba_a-Sram.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sram.obj `if test -f '../Sram.cpp'; then $(CYGPATH_W) '../Sram.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sram.cpp'; fi`

libgba_a-Text.o: ../Text.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Text.o -MD -MP -MF "$(DEPDIR)/libgba_a-Text.Tpo" \
	  -c -o libgba_a-Text.o `test -f '../Text.cpp' || echo '$(srcdir)/'`../Text.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Text.Tpo" "$(DEPDIR)/libgba_a-Text.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Text.Tpo"; exit 1; \
	fi
#	source='../Text.cpp' object='libgba_a-Text.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Text.Po' tmpdepfile='$(DEPDIR)/libgba_a-Text.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Text.o `test -f '../Text.cpp' || echo '$(srcdir)/'`../Text.cpp

libgba_a-Text.obj: ../Text.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Text.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Text.Tpo" \
	  -c -o libgba_a-Text.obj `if test -f '../Text.cpp'; then $(CYGPATH_W) '../Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../Text.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Text.Tpo" "$(DEPDIR)/libgba_a-Text.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Text.Tpo"; exit 1; \
	fi
#	source='../Text.cpp' object='libgba_a-Text.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Text.Po' tmpdepfile='$(DEPDIR)/libgba_a-Text.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Text.obj `if test -f '../Text.cpp'; then $(CYGPATH_W) '../Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../Text.cpp'; fi`

libgba_a-Util.o: ../Util.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Util.o -MD -MP -MF "$(DEPDIR)/libgba_a-Util.Tpo" \
	  -c -o libgba_a-Util.o `test -f '../Util.cpp' || echo '$(srcdir)/'`../Util.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-Util.Tpo" "$(DEPDIR)/libgba_a-Util.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Util.Tpo"; exit 1; \
	fi
#	source='../Util.cpp' object='libgba_a-Util.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Util.Po' tmpdepfile='$(DEPDIR)/libgba_a-Util.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Util.o `test -f '../Util.cpp' || echo '$(srcdir)/'`../Util.cpp

libgba_a-Util.obj: ../Util.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Util.obj -MD -MP -MF "$(DEPDIR)/libgba_a-Util.Tpo" \
	  -c -o libgba_a-Util.obj `if test -f '../Util.cpp'; then $(CYGPATH_W) '../Util.cpp'; else $(CYGPATH_W) '$(srcdir)/../Util.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-Util.Tpo" "$(DEPDIR)/libgba_a-Util.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-Util.Tpo"; exit 1; \
	fi
#	source='../Util.cpp' object='libgba_a-Util.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-Util.Po' tmpdepfile='$(DEPDIR)/libgba_a-Util.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Util.obj `if test -f '../Util.cpp'; then $(CYGPATH_W) '../Util.cpp'; else $(CYGPATH_W) '$(srcdir)/../Util.cpp'; fi`

libgba_a-admame.o: ../admame.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-admame.o -MD -MP -MF "$(DEPDIR)/libgba_a-admame.Tpo" \
	  -c -o libgba_a-admame.o `test -f '../admame.cpp' || echo '$(srcdir)/'`../admame.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-admame.Tpo" "$(DEPDIR)/libgba_a-admame.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-admame.Tpo"; exit 1; \
	fi
#	source='../admame.cpp' object='libgba_a-admame.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-admame.Po' tmpdepfile='$(DEPDIR)/libgba_a-admame.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-admame.o `test -f '../admame.cpp' || echo '$(srcdir)/'`../admame.cpp

libgba_a-admame.obj: ../admame.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-admame.obj -MD -MP -MF "$(DEPDIR)/libgba_a-admame.Tpo" \
	  -c -o libgba_a-admame.obj `if test -f '../admame.cpp'; then $(CYGPATH_W) '../admame.cpp'; else $(CYGPATH_W) '$(srcdir)/../admame.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-admame.Tpo" "$(DEPDIR)/libgba_a-admame.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-admame.Tpo"; exit 1; \
	fi
#	source='../admame.cpp' object='libgba_a-admame.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-admame.Po' tmpdepfile='$(DEPDIR)/libgba_a-admame.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-admame.obj `if test -f '../admame.cpp'; then $(CYGPATH_W) '../admame.cpp'; else $(CYGPATH_W) '$(srcdir)/../admame.cpp'; fi`

libgba_a-agbprint.o: ../agbprint.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-agbprint.o -MD -MP -MF "$(DEPDIR)/libgba_a-agbprint.Tpo" \
	  -c -o libgba_a-agbprint.o `test -f '../agbprint.cpp' || echo '$(srcdir)/'`../agbprint.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-agbprint.Tpo" "$(DEPDIR)/libgba_a-agbprint.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-agbprint.Tpo"; exit 1; \
	fi
#	source='../agbprint.cpp' object='libgba_a-agbprint.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-agbprint.Po' tmpdepfile='$(DEPDIR)/libgba_a-agbprint.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-agbprint.o `test -f '../agbprint.cpp' || echo '$(srcdir)/'`../agbprint.cpp

libgba_a-agbprint.obj: ../agbprint.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-agbprint.obj -MD -MP -MF "$(DEPDIR)/libgba_a-agbprint.Tpo" \
	  -c -o libgba_a-agbprint.obj `if test -f '../agbprint.cpp'; then $(CYGPATH_W) '../agbprint.cpp'; else $(CYGPATH_W) '$(srcdir)/../agbprint.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-agbprint.Tpo" "$(DEPDIR)/libgba_a-agbprint.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-agbprint.Tpo"; exit 1; \
	fi
#	source='../agbprint.cpp' object='libgba_a-agbprint.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-agbprint.Po' tmpdepfile='$(DEPDIR)/libgba_a-agbprint.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-agbprint.obj `if test -f '../agbprint.cpp'; then $(CYGPATH_W) '../agbprint.cpp'; else $(CYGPATH_W) '$(srcdir)/../agbprint.cpp'; fi`

libgba_a-armdis.o: ../armdis.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-armdis.o -MD -MP -MF "$(DEPDIR)/libgba_a-armdis.Tpo" \
	  -c -o libgba_a-armdis.o `test -f '../armdis.cpp' || echo '$(srcdir)/'`../armdis.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-armdis.Tpo" "$(DEPDIR)/libgba_a-armdis.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-armdis.Tpo"; exit 1; \
	fi
#	source='../armdis.cpp' object='libgba_a-armdis.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-armdis.Po' tmpdepfile='$(DEPDIR)/libgba_a-armdis.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-armdis.o `test -f '../armdis.cpp' || echo '$(srcdir)/'`../armdis.cpp

libgba_a-armdis.obj: ../armdis.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-armdis.obj -MD -MP -MF "$(DEPDIR)/libgba_a-armdis.Tpo" \
	  -c -o libgba_a-armdis.obj `if test -f '../armdis.cpp'; then $(CYGPATH_W) '../armdis.cpp'; else $(CYGPATH_W) '$(srcdir)/../armdis.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-armdis.Tpo" "$(DEPDIR)/libgba_a-armdis.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-armdis.Tpo"; exit 1; \
	fi
#	source='../armdis.cpp' object='libgba_a-armdis.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-armdis.Po' tmpdepfile='$(DEPDIR)/libgba_a-armdis.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-armdis.obj `if test -f '../armdis.cpp'; then $(CYGPATH_W) '../armdis.cpp'; else $(CYGPATH_W) '$(srcdir)/../armdis.cpp'; fi`

libgba_a-bilinear.o: ../bilinear.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bilinear.o -MD -MP -MF "$(DEPDIR)/libgba_a-bilinear.Tpo" \
	  -c -o libgba_a-bilinear.o `test -f '../bilinear.cpp' || echo '$(srcdir)/'`../bilinear.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-bilinear.Tpo" "$(DEPDIR)/libgba_a-bilinear.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-bilinear.Tpo"; exit 1; \
	fi
#	source='../bilinear.cpp' object='libgba_a-bilinear.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-bilinear.Po' tmpdepfile='$(DEPDIR)/libgba_a-bilinear.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bilinear.o `test -f '../bilinear.cpp' || echo '$(srcdir)/'`../bilinear.cpp

libgba_a-bilinear.obj: ../bilinear.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bilinear.obj -MD -MP -MF "$(DEPDIR)/libgba_a-bilinear.Tpo" \
	  -c -o libgba_a-bilinear.obj `if test -f '../bilinear.cpp'; then $(CYGPATH_W) '../bilinear.cpp'; else $(CYGPATH_W) '$(srcdir)/../bilinear.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-bilinear.Tpo" "$(DEPDIR)/libgba_a-bilinear.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-bilinear.Tpo"; exit 1; \
	fi
#	source='../bilinear.cpp' object='libgba_a-bilinear.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-bilinear.Po' tmpdepfile='$(DEPDIR)/libgba_a-bilinear.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bilinear.obj `if test -f '../bilinear.cpp'; then $(CYGPATH_W) '../bilinear.cpp'; else $(CYGPATH_W) '$(srcdir)/../bilinear.cpp'; fi`

libgba_a-bios.o: ../bios.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bios.o -MD -MP -MF "$(DEPDIR)/libgba_a-bios.Tpo" \
	  -c -o libgba_a-bios.o `test -f '../bios.cpp' || echo '$(srcdir)/'`../bios.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-bios.Tpo" "$(DEPDIR)/libgba_a-bios.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-bios.Tpo"; exit 1; \
	fi
#	source='../bios.cpp' object='libgba_a-bios.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-bios.Po' tmpdepfile='$(DEPDIR)/libgba_a-bios.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bios.o `test -f '../bios.cpp' || echo '$(srcdir)/'`../bios.cpp

libgba_a-bios.obj: ../bios.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bios.obj -MD -MP -MF "$(DEPDIR)/libgba_a-bios.Tpo" \
	  -c -o libgba_a-bios.obj `if test -f '../bios.cpp'; then $(CYGPATH_W) '../bios.cpp'; else $(CYGPATH_W) '$(srcdir)/../bios.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-bios.Tpo" "$(DEPDIR)/libgba_a-bios.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-bios.Tpo"; exit 1; \
	fi
#	source='../bios.cpp' object='libgba_a-bios.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-bios.Po' tmpdepfile='$(DEPDIR)/libgba_a-bios.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bios.obj `if test -f '../bios.cpp'; then $(CYGPATH_W) '../bios.cpp'; else $(CYGPATH_W) '$(srcdir)/../bios.cpp'; fi`

libgba_a-elf.o: ../elf.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-elf.o -MD -MP -MF "$(DEPDIR)/libgba_a-elf.Tpo" \
	  -c -o libgba_a-elf.o `test -f '../elf.cpp' || echo '$(srcdir)/'`../elf.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-elf.Tpo" "$(DEPDIR)/libgba_a-elf.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-elf.Tpo"; exit 1; \
	fi
#	source='../elf.cpp' object='libgba_a-elf.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-elf.Po' tmpdepfile='$(DEPDIR)/libgba_a-elf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-elf.o `test -f '../elf.cpp' || echo '$(srcdir)/'`../elf.cpp

libgba_a-elf.obj: ../elf.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-elf.obj -MD -MP -MF "$(DEPDIR)/libgba_a-elf.Tpo" \
	  -c -o libgba_a-elf.obj `if test -f '../elf.cpp'; then $(CYGPATH_W) '../elf.cpp'; else $(CYGPATH_W) '$(srcdir)/../elf.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-elf.Tpo" "$(DEPDIR)/libgba_a-elf.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-elf.Tpo"; exit 1; \
	fi
#	source='../elf.cpp' object='libgba_a-elf.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-elf.Po' tmpdepfile='$(DEPDIR)/libgba_a-elf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-elf.obj `if test -f '../elf.cpp'; then $(CYGPATH_W) '../elf.cpp'; else $(CYGPATH_W) '$(srcdir)/../elf.cpp'; fi`

libgba_a-hq2x.o: ../hq2x.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-hq2x.o -MD -MP -MF "$(DEPDIR)/libgba_a-hq2x.Tpo" \
	  -c -o libgba_a-hq2x.o `test -f '../hq2x.cpp' || echo '$(srcdir)/'`../hq2x.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-hq2x.Tpo" "$(DEPDIR)/libgba_a-hq2x.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-hq2x.Tpo"; exit 1; \
	fi
#	source='../hq2x.cpp' object='libgba_a-hq2x.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-hq2x.Po' tmpdepfile='$(DEPDIR)/libgba_a-hq2x.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-hq2x.o `test -f '../hq2x.cpp' || echo '$(srcdir)/'`../hq2x.cpp

libgba_a-hq2x.obj: ../hq2x.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-hq2x.obj -MD -MP -MF "$(DEPDIR)/libgba_a-hq2x.Tpo" \
	  -c -o libgba_a-hq2x.obj `if test -f '../hq2x.cpp'; then $(CYGPATH_W) '../hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../hq2x.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-hq2x.Tpo" "$(DEPDIR)/libgba_a-hq2x.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-hq2x.Tpo"; exit 1; \
	fi
#	source='../hq2x.cpp' object='libgba_a-hq2x.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-hq2x.Po' tmpdepfile='$(DEPDIR)/libgba_a-hq2x.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-hq2x.obj `if test -f '../hq2x.cpp'; then $(CYGPATH_W) '../hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../hq2x.cpp'; fi`

libgba_a-interframe.o: ../interframe.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-interframe.o -MD -MP -MF "$(DEPDIR)/libgba_a-interframe.Tpo" \
	  -c -o libgba_a-interframe.o `test -f '../interframe.cpp' || echo '$(srcdir)/'`../interframe.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-interframe.Tpo" "$(DEPDIR)/libgba_a-interframe.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-interframe.Tpo"; exit 1; \
	fi
#	source='../interframe.cpp' object='libgba_a-interframe.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-interframe.Po' tmpdepfile='$(DEPDIR)/libgba_a-interframe.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-interframe.o `test -f '../interframe.cpp' || echo '$(srcdir)/'`../interframe.cpp

libgba_a-interframe.obj: ../interframe.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-interframe.obj -MD -MP -MF "$(DEPDIR)/libgba_a-interframe.Tpo" \
	  -c -o libgba_a-interframe.obj `if test -f '../interframe.cpp'; then $(CYGPATH_W) '../interframe.cpp'; else $(CYGPATH_W) '$(srcdir)/../interframe.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-interframe.Tpo" "$(DEPDIR)/libgba_a-interframe.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-interframe.Tpo"; exit 1; \
	fi
#	source='../interframe.cpp' object='libgba_a-interframe.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-interframe.Po' tmpdepfile='$(DEPDIR)/libgba_a-interframe.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-interframe.obj `if test -f '../interframe.cpp'; then $(CYGPATH_W) '../interframe.cpp'; else $(CYGPATH_W) '$(srcdir)/../interframe.cpp'; fi`

libgba_a-motionblur.o: ../motionblur.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-motionblur.o -MD -MP -MF "$(DEPDIR)/libgba_a-motionblur.Tpo" \
	  -c -o libgba_a-motionblur.o `test -f '../motionblur.cpp' || echo '$(srcdir)/'`../motionblur.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-motionblur.Tpo" "$(DEPDIR)/libgba_a-motionblur.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-motionblur.Tpo"; exit 1; \
	fi
#	source='../motionblur.cpp' object='libgba_a-motionblur.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-motionblur.Po' tmpdepfile='$(DEPDIR)/libgba_a-motionblur.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-motionblur.o `test -f '../motionblur.cpp' || echo '$(srcdir)/'`../motionblur.cpp

libgba_a-motionblur.obj: ../motionblur.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-motionblur.obj -MD -MP -MF "$(DEPDIR)/libgba_a-motionblur.Tpo" \
	  -c -o libgba_a-motionblur.obj `if test -f '../motionblur.cpp'; then $(CYGPATH_W) '../motionblur.cpp'; else $(CYGPATH_W) '$(srcdir)/../motionblur.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-motionblur.Tpo" "$(DEPDIR)/libgba_a-motionblur.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-motionblur.Tpo"; exit 1; \
	fi
#	source='../motionblur.cpp' object='libgba_a-motionblur.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-motionblur.Po' tmpdepfile='$(DEPDIR)/libgba_a-motionblur.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-motionblur.obj `if test -f '../motionblur.cpp'; then $(CYGPATH_W) '../motionblur.cpp'; else $(CYGPATH_W) '$(srcdir)/../motionblur.cpp'; fi`

libgba_a-pixel.o: ../pixel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-pixel.o -MD -MP -MF "$(DEPDIR)/libgba_a-pixel.Tpo" \
	  -c -o libgba_a-pixel.o `test -f '../pixel.cpp' || echo '$(srcdir)/'`../pixel.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-pixel.Tpo" "$(DEPDIR)/libgba_a-pixel.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-pixel.Tpo"; exit 1; \
	fi
#	source='../pixel.cpp' object='libgba_a-pixel.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-pixel.Po' tmpdepfile='$(DEPDIR)/libgba_a-pixel.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-pixel.o `test -f '../pixel.cpp' || echo '$(srcdir)/'`../pixel.cpp

libgba_a-pixel.obj: ../pixel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-pixel.obj -MD -MP -MF "$(DEPDIR)/libgba_a-pixel.Tpo" \
	  -c -o libgba_a-pixel.obj `if test -f '../pixel.cpp'; then $(CYGPATH_W) '../pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/../pixel.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-pixel.Tpo" "$(DEPDIR)/libgba_a-pixel.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-pixel.Tpo"; exit 1; \
	fi
#	source='../pixel.cpp' object='libgba_a-pixel.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-pixel.Po' tmpdepfile='$(DEPDIR)/libgba_a-pixel.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-pixel.obj `if test -f '../pixel.cpp'; then $(CYGPATH_W) '../pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/../pixel.cpp'; fi`

libgba_a-remote.o: ../remote.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-remote.o -MD -MP -MF "$(DEPDIR)/libgba_a-remote.Tpo" \
	  -c -o libgba_a-remote.o `test -f '../remote.cpp' || echo '$(srcdir)/'`../remote.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-remote.Tpo" "$(DEPDIR)/libgba_a-remote.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-remote.Tpo"; exit 1; \
	fi
#	source='../remote.cpp' object='libgba_a-remote.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-remote.Po' tmpdepfile='$(DEPDIR)/libgba_a-remote.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-remote.o `test -f '../remote.cpp' || echo '$(srcdir)/'`../remote.cpp

libgba_a-remote.obj: ../remote.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-remote.obj -MD -MP -MF "$(DEPDIR)/libgba_a-remote.Tpo" \
	  -c -o libgba_a-remote.obj `if test -f '../remote.cpp'; then $(CYGPATH_W) '../remote.cpp'; else $(CYGPATH_W) '$(srcdir)/../remote.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-remote.Tpo" "$(DEPDIR)/libgba_a-remote.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-remote.Tpo"; exit 1; \
	fi
#	source='../remote.cpp' object='libgba_a-remote.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-remote.Po' tmpdepfile='$(DEPDIR)/libgba_a-remote.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-remote.obj `if test -f '../remote.cpp'; then $(CYGPATH_W) '../remote.cpp'; else $(CYGPATH_W) '$(srcdir)/../remote.cpp'; fi`

libgba_a-scanline.o: ../scanline.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-scanline.o -MD -MP -MF "$(DEPDIR)/libgba_a-scanline.Tpo" \
	  -c -o libgba_a-scanline.o `test -f '../scanline.cpp' || echo '$(srcdir)/'`../scanline.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-scanline.Tpo" "$(DEPDIR)/libgba_a-scanline.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-scanline.Tpo"; exit 1; \
	fi
#	source='../scanline.cpp' object='libgba_a-scanline.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-scanline.Po' tmpdepfile='$(DEPDIR)/libgba_a-scanline.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-scanline.o `test -f '../scanline.cpp' || echo '$(srcdir)/'`../scanline.cpp

libgba_a-scanline.obj: ../scanline.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-scanline.obj -MD -MP -MF "$(DEPDIR)/libgba_a-scanline.Tpo" \
	  -c -o libgba_a-scanline.obj `if test -f '../scanline.cpp'; then $(CYGPATH_W) '../scanline.cpp'; else $(CYGPATH_W) '$(srcdir)/../scanline.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-scanline.Tpo" "$(DEPDIR)/libgba_a-scanline.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-scanline.Tpo"; exit 1; \
	fi
#	source='../scanline.cpp' object='libgba_a-scanline.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-scanline.Po' tmpdepfile='$(DEPDIR)/libgba_a-scanline.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-scanline.obj `if test -f '../scanline.cpp'; then $(CYGPATH_W) '../scanline.cpp'; else $(CYGPATH_W) '$(srcdir)/../scanline.cpp'; fi`

libgba_a-simple2x.o: ../simple2x.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-simple2x.o -MD -MP -MF "$(DEPDIR)/libgba_a-simple2x.Tpo" \
	  -c -o libgba_a-simple2x.o `test -f '../simple2x.cpp' || echo '$(srcdir)/'`../simple2x.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-simple2x.Tpo" "$(DEPDIR)/libgba_a-simple2x.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-simple2x.Tpo"; exit 1; \
	fi
#	source='../simple2x.cpp' object='libgba_a-simple2x.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-simple2x.Po' tmpdepfile='$(DEPDIR)/libgba_a-simple2x.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-simple2x.o `test -f '../simple2x.cpp' || echo '$(srcdir)/'`../simple2x.cpp

libgba_a-simple2x.obj: ../simple2x.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-simple2x.obj -MD -MP -MF "$(DEPDIR)/libgba_a-simple2x.Tpo" \
	  -c -o libgba_a-simple2x.obj `if test -f '../simple2x.cpp'; then $(CYGPATH_W) '../simple2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../simple2x.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-simple2x.Tpo" "$(DEPDIR)/libgba_a-simple2x.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-simple2x.Tpo"; exit 1; \
	fi
#	source='../simple2x.cpp' object='libgba_a-simple2x.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-simple2x.Po' tmpdepfile='$(DEPDIR)/libgba_a-simple2x.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-simple2x.obj `if test -f '../simple2x.cpp'; then $(CYGPATH_W) '../simple2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../simple2x.cpp'; fi`

libgba_a-unzip.o: ../unzip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-unzip.o -MD -MP -MF "$(DEPDIR)/libgba_a-unzip.Tpo" \
	  -c -o libgba_a-unzip.o `test -f '../unzip.cpp' || echo '$(srcdir)/'`../unzip.cpp; \
	then mv -f "$(DEPDIR)/libgba_a-unzip.Tpo" "$(DEPDIR)/libgba_a-unzip.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-unzip.Tpo"; exit 1; \
	fi
#	source='../unzip.cpp' object='libgba_a-unzip.o' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-unzip.Po' tmpdepfile='$(DEPDIR)/libgba_a-unzip.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-unzip.o `test -f '../unzip.cpp' || echo '$(srcdir)/'`../unzip.cpp

libgba_a-unzip.obj: ../unzip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-unzip.obj -MD -MP -MF "$(DEPDIR)/libgba_a-unzip.Tpo" \
	  -c -o libgba_a-unzip.obj `if test -f '../unzip.cpp'; then $(CYGPATH_W) '../unzip.cpp'; else $(CYGPATH_W) '$(srcdir)/../unzip.cpp'; fi`; \
	then mv -f "$(DEPDIR)/libgba_a-unzip.Tpo" "$(DEPDIR)/libgba_a-unzip.Po"; \
	else rm -f "$(DEPDIR)/libgba_a-unzip.Tpo"; exit 1; \
	fi
#	source='../unzip.cpp' object='libgba_a-unzip.obj' libtool=no \
#	depfile='$(DEPDIR)/libgba_a-unzip.Po' tmpdepfile='$(DEPDIR)/libgba_a-unzip.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-unzip.obj `if test -f '../unzip.cpp'; then $(CYGPATH_W) '../unzip.cpp'; else $(CYGPATH_W) '$(srcdir)/../unzip.cpp'; fi`

gvba-configfile.o: configfile.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-configfile.o -MD -MP -MF "$(DEPDIR)/gvba-configfile.Tpo" \
	  -c -o gvba-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp; \
	then mv -f "$(DEPDIR)/gvba-configfile.Tpo" "$(DEPDIR)/gvba-configfile.Po"; \
	else rm -f "$(DEPDIR)/gvba-configfile.Tpo"; exit 1; \
	fi
#	source='configfile.cpp' object='gvba-configfile.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-configfile.Po' tmpdepfile='$(DEPDIR)/gvba-configfile.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp

gvba-configfile.obj: configfile.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-configfile.obj -MD -MP -MF "$(DEPDIR)/gvba-configfile.Tpo" \
	  -c -o gvba-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-configfile.Tpo" "$(DEPDIR)/gvba-configfile.Po"; \
	else rm -f "$(DEPDIR)/gvba-configfile.Tpo"; exit 1; \
	fi
#	source='configfile.cpp' object='gvba-configfile.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-configfile.Po' tmpdepfile='$(DEPDIR)/gvba-configfile.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`

gvba-filters.o: filters.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-filters.o -MD -MP -MF "$(DEPDIR)/gvba-filters.Tpo" \
	  -c -o gvba-filters.o `test -f 'filters.cpp' || echo '$(srcdir)/'`filters.cpp; \
	then mv -f "$(DEPDIR)/gvba-filters.Tpo" "$(DEPDIR)/gvba-filters.Po"; \
	else rm -f "$(DEPDIR)/gvba-filters.Tpo"; exit 1; \
	fi
#	source='filters.cpp' object='gvba-filters.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-filters.Po' tmpdepfile='$(DEPDIR)/gvba-filters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-filters.o `test -f 'filters.cpp' || echo '$(srcdir)/'`filters.cpp

gvba-filters.obj: filters.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-filters.obj -MD -MP -MF "$(DEPDIR)/gvba-filters.Tpo" \
	  -c -o gvba-filters.obj `if test -f 'filters.cpp'; then $(CYGPATH_W) 'filters.cpp'; else $(CYGPATH_W) '$(srcdir)/filters.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-filters.Tpo" "$(DEPDIR)/gvba-filters.Po"; \
	else rm -f "$(DEPDIR)/gvba-filters.Tpo"; exit 1; \
	fi
#	source='filters.cpp' object='gvba-filters.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-filters.Po' tmpdepfile='$(DEPDIR)/gvba-filters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-filters.obj `if test -f 'filters.cpp'; then $(CYGPATH_W) 'filters.cpp'; else $(CYGPATH_W) '$(srcdir)/filters.cpp'; fi`

gvba-input.o: input.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-input.o -MD -MP -MF "$(DEPDIR)/gvba-input.Tpo" \
	  -c -o gvba-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp; \
	then mv -f "$(DEPDIR)/gvba-input.Tpo" "$(DEPDIR)/gvba-input.Po"; \
	else rm -f "$(DEPDIR)/gvba-input.Tpo"; exit 1; \
	fi
#	source='input.cpp' object='gvba-input.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-input.Po' tmpdepfile='$(DEPDIR)/gvba-input.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp

gvba-input.obj: input.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-input.obj -MD -MP -MF "$(DEPDIR)/gvba-input.Tpo" \
	  -c -o gvba-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-input.Tpo" "$(DEPDIR)/gvba-input.Po"; \
	else rm -f "$(DEPDIR)/gvba-input.Tpo"; exit 1; \
	fi
#	source='input.cpp' object='gvba-input.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-input.Po' tmpdepfile='$(DEPDIR)/gvba-input.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`

gvba-joypadconfig.o: joypadconfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-joypadconfig.o -MD -MP -MF "$(DEPDIR)/gvba-joypadconfig.Tpo" \
	  -c -o gvba-joypadconfig.o `test -f 'joypadconfig.cpp' || echo '$(srcdir)/'`joypadconfig.cpp; \
	then mv -f "$(DEPDIR)/gvba-joypadconfig.Tpo" "$(DEPDIR)/gvba-joypadconfig.Po"; \
	else rm -f "$(DEPDIR)/gvba-joypadconfig.Tpo"; exit 1; \
	fi
#	source='joypadconfig.cpp' object='gvba-joypadconfig.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-joypadconfig.Po' tmpdepfile='$(DEPDIR)/gvba-joypadconfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-joypadconfig.o `test -f 'joypadconfig.cpp' || echo '$(srcdir)/'`joypadconfig.cpp

gvba-joypadconfig.obj: joypadconfig.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-joypadconfig.obj -MD -MP -MF "$(DEPDIR)/gvba-joypadconfig.Tpo" \
	  -c -o gvba-joypadconfig.obj `if test -f 'joypadconfig.cpp'; then $(CYGPATH_W) 'joypadconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/joypadconfig.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-joypadconfig.Tpo" "$(DEPDIR)/gvba-joypadconfig.Po"; \
	else rm -f "$(DEPDIR)/gvba-joypadconfig.Tpo"; exit 1; \
	fi
#	source='joypadconfig.cpp' object='gvba-joypadconfig.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-joypadconfig.Po' tmpdepfile='$(DEPDIR)/gvba-joypadconfig.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-joypadconfig.obj `if test -f 'joypadconfig.cpp'; then $(CYGPATH_W) 'joypadconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/joypadconfig.cpp'; fi`

gvba-main.o: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-main.o -MD -MP -MF "$(DEPDIR)/gvba-main.Tpo" \
	  -c -o gvba-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
	then mv -f "$(DEPDIR)/gvba-main.Tpo" "$(DEPDIR)/gvba-main.Po"; \
	else rm -f "$(DEPDIR)/gvba-main.Tpo"; exit 1; \
	fi
#	source='main.cpp' object='gvba-main.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-main.Po' tmpdepfile='$(DEPDIR)/gvba-main.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

gvba-main.obj: main.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-main.obj -MD -MP -MF "$(DEPDIR)/gvba-main.Tpo" \
	  -c -o gvba-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-main.Tpo" "$(DEPDIR)/gvba-main.Po"; \
	else rm -f "$(DEPDIR)/gvba-main.Tpo"; exit 1; \
	fi
#	source='main.cpp' object='gvba-main.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-main.Po' tmpdepfile='$(DEPDIR)/gvba-main.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

gvba-screenarea.o: screenarea.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-screenarea.o -MD -MP -MF "$(DEPDIR)/gvba-screenarea.Tpo" \
	  -c -o gvba-screenarea.o `test -f 'screenarea.cpp' || echo '$(srcdir)/'`screenarea.cpp; \
	then mv -f "$(DEPDIR)/gvba-screenarea.Tpo" "$(DEPDIR)/gvba-screenarea.Po"; \
	else rm -f "$(DEPDIR)/gvba-screenarea.Tpo"; exit 1; \
	fi
#	source='screenarea.cpp' object='gvba-screenarea.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-screenarea.Po' tmpdepfile='$(DEPDIR)/gvba-screenarea.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-screenarea.o `test -f 'screenarea.cpp' || echo '$(srcdir)/'`screenarea.cpp

gvba-screenarea.obj: screenarea.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-screenarea.obj -MD -MP -MF "$(DEPDIR)/gvba-screenarea.Tpo" \
	  -c -o gvba-screenarea.obj `if test -f 'screenarea.cpp'; then $(CYGPATH_W) 'screenarea.cpp'; else $(CYGPATH_W) '$(srcdir)/screenarea.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-screenarea.Tpo" "$(DEPDIR)/gvba-screenarea.Po"; \
	else rm -f "$(DEPDIR)/gvba-screenarea.Tpo"; exit 1; \
	fi
#	source='screenarea.cpp' object='gvba-screenarea.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-screenarea.Po' tmpdepfile='$(DEPDIR)/gvba-screenarea.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-screenarea.obj `if test -f 'screenarea.cpp'; then $(CYGPATH_W) 'screenarea.cpp'; else $(CYGPATH_W) '$(srcdir)/screenarea.cpp'; fi`

gvba-system.o: system.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-system.o -MD -MP -MF "$(DEPDIR)/gvba-system.Tpo" \
	  -c -o gvba-system.o `test -f 'system.cpp' || echo '$(srcdir)/'`system.cpp; \
	then mv -f "$(DEPDIR)/gvba-system.Tpo" "$(DEPDIR)/gvba-system.Po"; \
	else rm -f "$(DEPDIR)/gvba-system.Tpo"; exit 1; \
	fi
#	source='system.cpp' object='gvba-system.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-system.Po' tmpdepfile='$(DEPDIR)/gvba-system.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-system.o `test -f 'system.cpp' || echo '$(srcdir)/'`system.cpp

gvba-system.obj: system.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-system.obj -MD -MP -MF "$(DEPDIR)/gvba-system.Tpo" \
	  -c -o gvba-system.obj `if test -f 'system.cpp'; then $(CYGPATH_W) 'system.cpp'; else $(CYGPATH_W) '$(srcdir)/system.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-system.Tpo" "$(DEPDIR)/gvba-system.Po"; \
	else rm -f "$(DEPDIR)/gvba-system.Tpo"; exit 1; \
	fi
#	source='system.cpp' object='gvba-system.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-system.Po' tmpdepfile='$(DEPDIR)/gvba-system.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-system.obj `if test -f 'system.cpp'; then $(CYGPATH_W) 'system.cpp'; else $(CYGPATH_W) '$(srcdir)/system.cpp'; fi`

gvba-tools.o: tools.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-tools.o -MD -MP -MF "$(DEPDIR)/gvba-tools.Tpo" \
	  -c -o gvba-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp; \
	then mv -f "$(DEPDIR)/gvba-tools.Tpo" "$(DEPDIR)/gvba-tools.Po"; \
	else rm -f "$(DEPDIR)/gvba-tools.Tpo"; exit 1; \
	fi
#	source='tools.cpp' object='gvba-tools.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-tools.Po' tmpdepfile='$(DEPDIR)/gvba-tools.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp

gvba-tools.obj: tools.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-tools.obj -MD -MP -MF "$(DEPDIR)/gvba-tools.Tpo" \
	  -c -o gvba-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-tools.Tpo" "$(DEPDIR)/gvba-tools.Po"; \
	else rm -f "$(DEPDIR)/gvba-tools.Tpo"; exit 1; \
	fi
#	source='tools.cpp' object='gvba-tools.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-tools.Po' tmpdepfile='$(DEPDIR)/gvba-tools.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`

gvba-windowcallbacks.o: windowcallbacks.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-windowcallbacks.o -MD -MP -MF "$(DEPDIR)/gvba-windowcallbacks.Tpo" \
	  -c -o gvba-windowcallbacks.o `test -f 'windowcallbacks.cpp' || echo '$(srcdir)/'`windowcallbacks.cpp; \
	then mv -f "$(DEPDIR)/gvba-windowcallbacks.Tpo" "$(DEPDIR)/gvba-windowcallbacks.Po"; \
	else rm -f "$(DEPDIR)/gvba-windowcallbacks.Tpo"; exit 1; \
	fi
#	source='windowcallbacks.cpp' object='gvba-windowcallbacks.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-windowcallbacks.Po' tmpdepfile='$(DEPDIR)/gvba-windowcallbacks.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-windowcallbacks.o `test -f 'windowcallbacks.cpp' || echo '$(srcdir)/'`windowcallbacks.cpp

gvba-windowcallbacks.obj: windowcallbacks.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-windowcallbacks.obj -MD -MP -MF "$(DEPDIR)/gvba-windowcallbacks.Tpo" \
	  -c -o gvba-windowcallbacks.obj `if test -f 'windowcallbacks.cpp'; then $(CYGPATH_W) 'windowcallbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/windowcallbacks.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-windowcallbacks.Tpo" "$(DEPDIR)/gvba-windowcallbacks.Po"; \
	else rm -f "$(DEPDIR)/gvba-windowcallbacks.Tpo"; exit 1; \
	fi
#	source='windowcallbacks.cpp' object='gvba-windowcallbacks.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-windowcallbacks.Po' tmpdepfile='$(DEPDIR)/gvba-windowcallbacks.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-windowcallbacks.obj `if test -f 'windowcallbacks.cpp'; then $(CYGPATH_W) 'windowcallbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/windowcallbacks.cpp'; fi`

gvba-window.o: window.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-window.o -MD -MP -MF "$(DEPDIR)/gvba-window.Tpo" \
	  -c -o gvba-window.o `test -f 'window.cpp' || echo '$(srcdir)/'`window.cpp; \
	then mv -f "$(DEPDIR)/gvba-window.Tpo" "$(DEPDIR)/gvba-window.Po"; \
	else rm -f "$(DEPDIR)/gvba-window.Tpo"; exit 1; \
	fi
#	source='window.cpp' object='gvba-window.o' libtool=no \
#	depfile='$(DEPDIR)/gvba-window.Po' tmpdepfile='$(DEPDIR)/gvba-window.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-window.o `test -f 'window.cpp' || echo '$(srcdir)/'`window.cpp

gvba-window.obj: window.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-window.obj -MD -MP -MF "$(DEPDIR)/gvba-window.Tpo" \
	  -c -o gvba-window.obj `if test -f 'window.cpp'; then $(CYGPATH_W) 'window.cpp'; else $(CYGPATH_W) '$(srcdir)/window.cpp'; fi`; \
	then mv -f "$(DEPDIR)/gvba-window.Tpo" "$(DEPDIR)/gvba-window.Po"; \
	else rm -f "$(DEPDIR)/gvba-window.Tpo"; exit 1; \
	fi
#	source='window.cpp' object='gvba-window.obj' libtool=no \
#	depfile='$(DEPDIR)/gvba-window.Po' tmpdepfile='$(DEPDIR)/gvba-window.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-window.obj `if test -f 'window.cpp'; then $(CYGPATH_W) 'window.cpp'; else $(CYGPATH_W) '$(srcdir)/window.cpp'; fi`
uninstall-info-am:
dist_pkgdataDATA_INSTALL = $(INSTALL_DATA)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(dist_pkgdataDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f"; \
	  $(dist_pkgdataDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgdatadir)/$$f; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgdatadir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgdatadir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(pkgdatadir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-dist_pkgdataDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_pkgdataDATA \
	uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-data install-data-am install-data-recursive \
	install-dist_pkgdataDATA install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_pkgdataDATA uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
